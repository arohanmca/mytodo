

http://localhost:8080/v2/api-docs

http://localhost:8080/swagger-ui.html

====================================================
Course Update : Incompatibility in recent versions of Swagger and Hateoas
There is an incompatibility with the latest releases of Spring Boot between Swagger and HATEOAS.

While we wait for a fix, here is the set of latest dependencies working well.

<parent>
<groupId>org.springframework.boot</groupId>
<artifactId>spring-boot-starter-parent</artifactId>
<version>2.1.3.RELEASE</version>
<relativePath/> <!-- lookup parent from repository -->
</parent>
 
<dependency>
    <groupId>io.springfox</groupId>
    <artifactId>springfox-swagger2</artifactId>
    <version>2.9.2</version>
</dependency>
 
<dependency>
    <groupId>io.springfox</groupId>
    <artifactId>springfox-swagger-ui</artifactId>
    <version>2.9.2</version>
</dependency>


You might need to update your HATEOAS Code to be compatible with  2.1.3.Release

import static org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo;
import static org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn;
import org.springframework.hateoas.Resource;
import org.springframework.hateoas.mvc.ControllerLinkBuilder;



Resource<User> resource = new Resource<User>(user);
ControllerLinkBuilder linkTo = linkTo(methodOn(this.getClass()).retrieveAllUsers());
resource.add(linkTo.withRel("all-users"));
return resource;
========================================================================================

Monitoring by Spring Actuator
	Add below dependencies:

		<!-- monitoring apis using actuator -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency>
		<groupId>org.springframework.data</groupId>
		<artifactId>spring-data-rest-hal-browser</artifactId>
		</dependency>

Link to access actuator monitoring link : http://localhost:8080/actuator
Type: http://localhost:8080/ to get the HAL browser
http://localhost:8080/browser/index.html#/

==========================================================================================

Versioning:
-----------------
- Media Type Versioning also called Content Negotiation or Accept Header
	- Github
- Custom Header Versioning	
	- Microsoft
- URI Versioning
	- Twitter
- Request parameter Versioning
	- Amazon
Factors
	- URI pollution
	- Misuse of Http headers
	- Caching
===================================================================================
JPA

create table user (id integer not null, date_of_birth timestamp, name varchar(255), primary key (id));	

localhost:8080/h2-console/

jdbc:h2:mem:testdb